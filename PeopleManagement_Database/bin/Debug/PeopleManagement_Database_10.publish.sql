/*
Deployment script for PeopleManagementDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PeopleManagementDB"
:setvar DefaultFilePrefix "PeopleManagementDB"
:setvar DefaultDataPath "C:\Users\ssvin\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\ssvin\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[Accounts]...';


GO
CREATE TABLE [dbo].[Accounts] (
    [code]                INT          IDENTITY (1, 1) NOT NULL,
    [person_code]         INT          NOT NULL,
    [account_number]      VARCHAR (50) NOT NULL,
    [outstanding_balance] MONEY        NOT NULL,
    [statusCode]          INT          NULL,
    CONSTRAINT [PK_Accounts] PRIMARY KEY CLUSTERED ([code] ASC)
);


GO
PRINT N'Creating Index [dbo].[Accounts].[IX_Account_num]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Account_num]
    ON [dbo].[Accounts]([account_number] ASC);


GO
PRINT N'Creating Table [dbo].[Persons]...';


GO
CREATE TABLE [dbo].[Persons] (
    [code]      INT          IDENTITY (1, 1) NOT NULL,
    [name]      VARCHAR (50) NULL,
    [surname]   VARCHAR (50) NULL,
    [id_number] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Persons] PRIMARY KEY CLUSTERED ([code] ASC)
);


GO
PRINT N'Creating Index [dbo].[Persons].[IX_Person_id]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Person_id]
    ON [dbo].[Persons]([id_number] ASC);


GO
PRINT N'Creating Table [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [Id]   INT            IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (200) NOT NULL,
    CONSTRAINT [PK_Roles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Status]...';


GO
CREATE TABLE [dbo].[Status] (
    [Code] INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Status] PRIMARY KEY CLUSTERED ([Code] ASC)
);


GO
PRINT N'Creating Table [dbo].[Transactions]...';


GO
CREATE TABLE [dbo].[Transactions] (
    [code]             INT           IDENTITY (1, 1) NOT NULL,
    [account_code]     INT           NOT NULL,
    [transaction_date] DATETIME      NOT NULL,
    [capture_date]     DATETIME      NOT NULL,
    [amount]           MONEY         NOT NULL,
    [description]      VARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Transactions] PRIMARY KEY CLUSTERED ([code] ASC)
);


GO
PRINT N'Creating Table [dbo].[UserRoles]...';


GO
CREATE TABLE [dbo].[UserRoles] (
    [Id]        INT IDENTITY (1, 1) NOT NULL,
    [FK_UserId] INT NOT NULL,
    [FK_RoleId] INT NOT NULL,
    CONSTRAINT [PK_UserRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]                     INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]              NVARCHAR (150) NOT NULL,
    [Surname]                NVARCHAR (150) NOT NULL,
    [MobileNumber]           NVARCHAR (20)  NOT NULL,
    [MobileNumberConfirmed]  BIT            NOT NULL,
    [EmailAddress]           NVARCHAR (200) NOT NULL,
    [PasswordHash]           NVARCHAR (MAX) NOT NULL,
    [EmailConfirmed]         BIT            NOT NULL,
    [OTP]                    NVARCHAR (50)  NULL,
    [EmailOTP]               NVARCHAR (50)  NULL,
    [DateCreated]            DATETIME       NULL,
    [LastLogin]              DATETIME       NULL,
    [Active]                 BIT            NOT NULL,
    [PasswordLastUpdate]     DATETIME       NULL,
    [RefreshToken]           NVARCHAR (200) NULL,
    [RefreshTokenExpiryTime] DATETIME       NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[Users].[IX_Users_EmailAddress]...';


GO
CREATE NONCLUSTERED INDEX [IX_Users_EmailAddress]
    ON [dbo].[Users]([EmailAddress] ASC);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT 0 FOR [MobileNumberConfirmed];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT 0 FOR [EmailConfirmed];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT GETDATE() FOR [DateCreated];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT 1 FOR [Active];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT GETDATE() FOR [PasswordLastUpdate];


GO
PRINT N'Creating Foreign Key [dbo].[FK_Account_Person]...';


GO
ALTER TABLE [dbo].[Accounts]
    ADD CONSTRAINT [FK_Account_Person] FOREIGN KEY ([person_code]) REFERENCES [dbo].[Persons] ([code]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Account_Status]...';


GO
ALTER TABLE [dbo].[Accounts]
    ADD CONSTRAINT [FK_Account_Status] FOREIGN KEY ([statusCode]) REFERENCES [dbo].[Status] ([Code]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Transaction_Account]...';


GO
ALTER TABLE [dbo].[Transactions]
    ADD CONSTRAINT [FK_Transaction_Account] FOREIGN KEY ([account_code]) REFERENCES [dbo].[Accounts] ([code]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_UserId]...';


GO
ALTER TABLE [dbo].[UserRoles]
    ADD CONSTRAINT [FK_UserId] FOREIGN KEY ([FK_UserId]) REFERENCES [dbo].[Users] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_UserRoleId]...';


GO
ALTER TABLE [dbo].[UserRoles]
    ADD CONSTRAINT [FK_UserRoleId] FOREIGN KEY ([FK_RoleId]) REFERENCES [dbo].[Roles] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spAccount_AddAccount]...';


GO
CREATE PROCEDURE [dbo].[spAccount_AddAccount]
	@PersonCode INT,
    @AccountNumber VARCHAR(50),
    @OutstandingBalance MONEY
AS
BEGIN
    DECLARE @IsSuccess BIT = 0, @Message VARCHAR(250) = '', @Status VARCHAR(250) = '';  
    SET NOCOUNT ON;

    IF NOT EXISTS (SELECT 1 FROM Persons WHERE code = @PersonCode)
    BEGIN
        SET @Message = 'Person does not exist.';
        SET @Status = 'Failure';
        SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
        RETURN;
    END

    -- Check for duplicate account number
    IF EXISTS (SELECT 1 FROM Accounts WHERE account_number = @AccountNumber)
    BEGIN
        SET @Message = 'Account number already exists.';
        SET @Status = 'Failure';
        SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
        RETURN;
    END

    -- Insert the new account
    BEGIN TRY
        INSERT INTO Accounts(person_code, account_number, outstanding_balance, statusCode)
        VALUES (@PersonCode, @AccountNumber, @OutstandingBalance, 1);

        SELECT 1 AS IsSuccess, 'Account successfully created.' AS Message;
    END TRY

    BEGIN CATCH
         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION;

       SELECT @IsSuccess = 0, @Message = ERROR_MESSAGE(), @Status = 'Failure';

    END CATCH
    SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
END
GO
PRINT N'Creating Procedure [dbo].[spAccount_CloseAccount]...';


GO
CREATE PROCEDURE [dbo].[spAccount_CloseAccount]
	@AccountCode INT
AS
BEGIN
    DECLARE @IsSuccess BIT = 0, @Message VARCHAR(250) = '', @Status VARCHAR(250) = ''; 
    SET NOCOUNT ON;

    IF NOT EXISTS (SELECT 1 FROM Accounts WHERE code = @AccountCode)
    BEGIN
        SET @Message = 'Account does not exist.';
        SET @Status = 'Failure';
        SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
        RETURN;
    END

    IF EXISTS (SELECT 1 FROM Accounts WHERE code = @AccountCode AND outstanding_balance <> 0)
    BEGIN
        SET @Message = 'Account cannot be closed because the outstanding balance is not zero.';
        SET @Status = 'Failure';
        SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
        RETURN;
    END

    BEGIN TRY
        BEGIN TRANSACTION;
        
        UPDATE Accounts
        SET statusCode = (SELECT Code FROM [Status] WHERE [Name] = 'Closed')
        WHERE code = @AccountCode;

        COMMIT TRANSACTION;

        SET @IsSuccess = 1;
        SET @Message = 'Account successfully closed.';
        SET @Status = 'Success';
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION;

        SET @IsSuccess = 0;
        SET @Message = ERROR_MESSAGE();
        SET @Status = 'Failure';
    END CATCH

    SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
END
GO
PRINT N'Creating Procedure [dbo].[spTransaction_AddTransaction]...';


GO
CREATE PROCEDURE [dbo].[spTransaction_AddTransaction]
	@AccountCode INT,
    @TransactionDate DATETIME,
    @CapturedDate DATETIME,
    @Amount MONEY,
    @Description NVARCHAR(255)
AS
BEGIN
    DECLARE @IsSuccess BIT = 0, @Message VARCHAR(250) = '', @Status VARCHAR(250) = '';  
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        INSERT INTO Transactions(account_code, transaction_date, capture_date, amount, [description])
        VALUES (@AccountCode, @TransactionDate, @CapturedDate, @Amount, @Description);

        UPDATE Accounts
        SET outstanding_balance = outstanding_balance + @Amount
        WHERE code = @AccountCode;

        COMMIT TRANSACTION;
        SET @IsSuccess = 1;
        SET @Message = 'Transaction successfully added.';
        SET @Status = 'Success';

    END TRY
    BEGIN CATCH
       IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION;

       SELECT @IsSuccess = 0, @Message = ERROR_MESSAGE(), @Status = 'Failure';

    END CATCH
    SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
END;
GO
PRINT N'Creating Procedure [dbo].[spUsers_AddUser]...';


GO
CREATE PROCEDURE [dbo].[spUsers_AddUser]
	@FirstName NVARCHAR(150), 
	@Surname NVARCHAR(150), 
	@MobileNumber NVARCHAR(20), 
	@EmailAddress NVARCHAR(200), 
	@PasswordHash NVARCHAR(MAX), 
	@OTP NVARCHAR(50), 
	@EmailOTP NVARCHAR(50)
AS 
BEGIN
	 DECLARE @IsSuccess BIT = 0, @Message VARCHAR(250) = '', @Status VARCHAR(250) = '';  
	 DECLARE @NewUserId INT;
	 SET NOCOUNT ON;
	 BEGIN TRY
		BEGIN TRANSACTION;

        INSERT INTO Users (FirstName, Surname, MobileNumber, EmailAddress, PasswordHash, OTP, EmailOTP)
        VALUES (@FirstName, @Surname, @MobileNumber, @EmailAddress, @PasswordHash, @OTP, @EmailOTP);

		SET @NewUserId = SCOPE_IDENTITY();

		INSERT INTO dbo.UserRoles(FK_UserId, FK_RoleId)
		VALUES(@NewUserId , 1)

        COMMIT TRANSACTION;

        SET @IsSuccess = 1;
        SET @Message = 'User created successfully with ID: ' + CAST(@NewUserId AS VARCHAR(10));
        SET @Status = 'Success';

	 END TRY
	 BEGIN CATCH
		IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION;

		SELECT @IsSuccess = 0, @Message = ERROR_MESSAGE(), @Status = 'Failure';
	 END CATCH

	 SELECT @IsSuccess AS [IsSuccess], @Message AS [Message], @Status AS [Status];
END
GO
PRINT N'Creating Procedure [dbo].[spUsers_FindByUsername]...';


GO
CREATE PROCEDURE [dbo].[spUsers_FindByUsername]
	@EmailAddress NVARCHAR(200)
AS
BEGIN
	SET NOCOUNT ON;

	SELECT Id
          ,FirstName
		  ,Surname
		  ,MobileNumber
		  ,MobileNumberConfirmed
		  ,OTP
		  ,EmailAddress
		  ,PasswordHash
		  ,EmailConfirmed
		  ,EmailOTP
		  ,DateCreated
		  ,LastLogin
		  ,PasswordLastUpdate
		  ,Active
		  ,RefreshToken
		  ,RefreshTokenExpiryTime
	FROM [dbo].[Users] 
	WHERE EmailAddress = @EmailAddress
	
END
GO
PRINT N'Creating Procedure [dbo].[spUsers_UpdateUserRefreshToken]...';


GO
CREATE PROCEDURE [dbo].[spUsers_UpdateUserRefreshToken]
	@EmailAddress NVARCHAR(200),
	@RefreshToken NVARCHAR(200),
	@RefreshTokenExpiryTime DATETIME
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE [dbo].[Users]
	SET RefreshToken = @RefreshToken
	   ,RefreshTokenExpiryTime = @RefreshTokenExpiryTime
	   ,LastLogin = GETDATE()
	WHERE EmailAddress = @EmailAddress
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
CREATE TABLE #aspNetRoles ([Id] [INT] IDENTITY(1,1) NOT NULL, [Name] [NVARCHAR](200) NOT NULL)
INSERT INTO #aspNetRoles([Name])
VALUES ('Admin'),
	   ('General')
	   --Insert into physical table
INSERT INTO [dbo].[Roles] ([Name])
SELECT [Name] FROM #aspNetRoles
WHERE [Name] NOT IN (SELECT [Name] FROM [dbo].[Roles] WITH (NOLOCK))
DROP TABLE #aspNetRoles

GO
INSERT INTO Persons (id_number,name,surname) VALUES ('63XX2907910XX','REJOCE','MAJOLA')
INSERT INTO Persons (id_number,name,surname) VALUES ('70XX2403660XX','','MOKOMELE')
INSERT INTO Persons (id_number,name,surname) VALUES ('42XX1002420XX','NTOMBIKHONA','MLAMBO')
INSERT INTO Persons (id_number,name,surname) VALUES ('39XX1400850XX','KLAAS','OCKHUIS')
INSERT INTO Persons (id_number,name,surname) VALUES ('59XX0110380XX','FERDI','LUUS')
INSERT INTO Persons (id_number,name,surname) VALUES ('67XX1807700XX','SHAUN','LOVELOT')
INSERT INTO Persons (id_number,name,surname) VALUES ('74XX2301550XX','','MOSOOANE')
INSERT INTO Persons (id_number,name,surname) VALUES ('59XX1901940XX','','MOTENO')
INSERT INTO Persons (id_number,name,surname) VALUES ('66XX0354900XX','','ZWANE')
INSERT INTO Persons (id_number,name,surname) VALUES ('72XX1806150XX','JOSEPH','MOSWEU')
INSERT INTO Persons (id_number,name,surname) VALUES ('78XX0650010XX','','ZULU')
INSERT INTO Persons (id_number,name,surname) VALUES ('72XX2205500XX','','SKINI')
INSERT INTO Persons (id_number,name,surname) VALUES ('60XX0707320XX','','MASOPA')
INSERT INTO Persons (id_number,name,surname) VALUES ('56XX2351400XX','','COETZEE')
INSERT INTO Persons (id_number,name,surname) VALUES ('65XX1003960XX','','BEN')
INSERT INTO Persons (id_number,name,surname) VALUES ('68XX1612540XX','SOPHIE','SIHLANGU')
INSERT INTO Persons (id_number,name,surname) VALUES ('71XX2451300XX','BUYISELWA','KEPATA')
INSERT INTO Persons (id_number,name,surname) VALUES ('72XX2702550XX','ZANELE','NDLOVU')
INSERT INTO Persons (id_number,name,surname) VALUES ('62XX2207640XX','','BARNABAS')
INSERT INTO Persons (id_number,name,surname) VALUES ('75XX2302470XX','','ABRAHAMS')
INSERT INTO Persons (id_number,name,surname) VALUES ('73XX1104570XX','','GOVENDER')
INSERT INTO Persons (id_number,name,surname) VALUES ('65XX0106100XX','','ABDUL')
INSERT INTO Persons (id_number,name,surname) VALUES ('47XX2706770XX','','MBIXANE')
INSERT INTO Persons (id_number,name,surname) VALUES ('59XX1002010XX','MAVIS','MBOMBO')
INSERT INTO Persons (id_number,name,surname) VALUES ('44XX0801450XX','','RAMALEPE')
INSERT INTO Persons (id_number,name,surname) VALUES ('70XX3105540XX','','MRSHALOI')
INSERT INTO Persons (id_number,name,surname) VALUES ('69XX2604250XX','','DE MEYER')
INSERT INTO Persons (id_number,name,surname) VALUES ('73XX0311610XX','MICHAELINE','SITUMA')
INSERT INTO Persons (id_number,name,surname) VALUES ('66XX2705830XX','','NDWANE')
INSERT INTO Persons (id_number,name,surname) VALUES ('76XX2904740XX','','WEAVER')
INSERT INTO Persons (id_number,name,surname) VALUES ('70XX2251240XX','REBECCA','JOOSTE')
INSERT INTO Persons (id_number,name,surname) VALUES ('67XX2750210XX','','MOKETSI')
INSERT INTO Persons (id_number,name,surname) VALUES ('77XX0952460XX','BUSISIWE','MTHANTI')
INSERT INTO Persons (id_number,name,surname) VALUES ('67XX1256390XX','MICHEAL','TRUTER')
INSERT INTO Persons (id_number,name,surname) VALUES ('70XX0355620XX','GLORY','SITHOLE')
INSERT INTO Persons (id_number,name,surname) VALUES ('57XX1907550XX','ANNA','KOBE')
INSERT INTO Persons (id_number,name,surname) VALUES ('69XX2459930XX','','PARTAB')
INSERT INTO Persons (id_number,name,surname) VALUES ('70XX1507650XX','STORY','MAIPATO')
INSERT INTO Persons (id_number,name,surname) VALUES ('69XX2005003XX','','SOTYATO')
INSERT INTO Persons (id_number,name,surname) VALUES ('73XX1306320XX','FRANS','TOSKEY')
INSERT INTO Persons (id_number,name,surname) VALUES ('58XX3100790XX','LILLIAN','DANIELS')
INSERT INTO Persons (id_number,name,surname) VALUES ('72XX0401610XX','THEMBILE','MLUMBI')
INSERT INTO Persons (id_number,name,surname) VALUES ('67XX1105810XX','BERENICE','MEINTJIES')
INSERT INTO Persons (id_number,name,surname) VALUES ('73XX1807580XX','','NOMAVUKA')
INSERT INTO Persons (id_number,name,surname) VALUES ('68XX1211490XX','NONHLANHLA','NGWENYA')
INSERT INTO Persons (id_number,name,surname) VALUES ('77XX2304150XX','ELIZABETH','MOSES')
INSERT INTO Persons (id_number,name,surname) VALUES ('76XX2902020XX','','JACOBS')
INSERT INTO Persons (id_number,name,surname) VALUES ('58XX1802150XX','','GERTENBACH')
INSERT INTO Persons (id_number,name,surname) VALUES ('78XX1701830XX','','MAMORARE')
INSERT INTO Persons (id_number,name,surname) VALUES ('45XX2605080XX','','KHUMALO')
GO
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '63XX2907910XX'),'10000577',234.99)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '70XX2403660XX'),'10001085',267.61)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '42XX1002420XX'),'1000373',520.67)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '39XX1400850XX'),'10007792',328.7)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '59XX0110380XX'),'10011773',641.7)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '67XX1807700XX'),'10012044',157.6)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '74XX2301550XX'),'100137',936.41)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '59XX1901940XX'),'10014357',440.87)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '66XX0354900XX'),'10015256',170.68)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '72XX1806150XX'),'10016473',663.77)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '78XX0650010XX'),'10017712',1471.27)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '72XX2205500XX'),'10019324',269.82)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '60XX0707320XX'),'10019766',485.78)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '56XX2351400XX'),'10020241',715.83)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '65XX1003960XX'),'10020918',81.35)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '68XX1612540XX'),'10021663',627.13)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '71XX2451300XX'),'10021698',426.43)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '72XX2702550XX'),'10022821',557.3)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '62XX2207640XX'),'10022996',299.2)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '75XX2302470XX'),'10024492',767.25)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '73XX1104570XX'),'10027262',483.55)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '65XX0106100XX'),'10027602',724.26)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '47XX2706770XX'),'10028579',1008.99)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '59XX1002010XX'),'1002864',1059.43)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '44XX0801450XX'),'10032223',719.65)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '70XX3105540XX'),'10032274',0)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '69XX2604250XX'),'1003267',843.59)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '73XX0311610XX'),'10036466',1186.85)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '66XX2705830XX'),'10036474',0)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '76XX2904740XX'),'10036679',226.79)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '70XX2251240XX'),'10037489',117.52)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '67XX2750210XX'),'10039015',542.08)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '77XX0952460XX'),'10039384',0)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '67XX1256390XX'),'10040919',612.1)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '70XX0355620XX'),'10041745',191.7)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '57XX1907550XX'),'10044361',807.6)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '69XX2459930XX'),'10045473',806.45)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '70XX1507650XX'),'10045856',310.03)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '69XX2005003XX'),'100460892',0)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '73XX1306320XX'),'10048022',0)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '58XX3100790XX'),'10048812',648.35)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '72XX0401610XX'),'1005022',260.85)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '67XX1105810XX'),'10050523',532.63)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '73XX1807580XX'),'10052623',302.85)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '68XX1211490XX'),'10052712',633.43)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '77XX2304150XX'),'10053581',281.77)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '76XX2902020XX'),'10053794',268.46)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '58XX1802150XX'),'10054855',1803.28)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '78XX1701830XX'),'10056262',789.74)
INSERT INTO Accounts (person_code,account_number,outstanding_balance) VALUES ((SELECT TOP(1) code FROM Persons WHERE id_number = '45XX2605080XX'),'10057269',359.6)
GO
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10000577'),GETDATE(),GETDATE(),234.99,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10001085'),GETDATE(),GETDATE(),267.61,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '1000373'),GETDATE(),GETDATE(),520.67,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10007792'),GETDATE(),GETDATE(),328.7,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10011773'),GETDATE(),GETDATE(),641.7,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10012044'),GETDATE(),GETDATE(),157.6,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '100137'),GETDATE(),GETDATE(),936.41,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10014357'),GETDATE(),GETDATE(),440.87,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10015256'),GETDATE(),GETDATE(),170.68,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10016473'),GETDATE(),GETDATE(),663.77,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10017712'),GETDATE(),GETDATE(),1471.27,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10019324'),GETDATE(),GETDATE(),269.82,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10019766'),GETDATE(),GETDATE(),485.78,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10020241'),GETDATE(),GETDATE(),715.83,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10020918'),GETDATE(),GETDATE(),81.35,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10021663'),GETDATE(),GETDATE(),627.13,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10021698'),GETDATE(),GETDATE(),426.43,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10022821'),GETDATE(),GETDATE(),557.3,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10022996'),GETDATE(),GETDATE(),299.2,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10024492'),GETDATE(),GETDATE(),767.25,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10027262'),GETDATE(),GETDATE(),483.55,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10027602'),GETDATE(),GETDATE(),724.26,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10028579'),GETDATE(),GETDATE(),1008.99,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '1002864'),GETDATE(),GETDATE(),1059.43,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10032223'),GETDATE(),GETDATE(),719.65,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '1003267'),GETDATE(),GETDATE(),843.59,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10036466'),GETDATE(),GETDATE(),1186.85,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10036679'),GETDATE(),GETDATE(),226.79,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10037489'),GETDATE(),GETDATE(),117.52,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10039015'),GETDATE(),GETDATE(),542.08,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10040919'),GETDATE(),GETDATE(),612.1,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10041745'),GETDATE(),GETDATE(),191.7,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10044361'),GETDATE(),GETDATE(),807.6,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10045473'),GETDATE(),GETDATE(),806.45,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10045856'),GETDATE(),GETDATE(),310.03,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10048812'),GETDATE(),GETDATE(),648.35,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '1005022'),GETDATE(),GETDATE(),260.85,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10050523'),GETDATE(),GETDATE(),532.63,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10052623'),GETDATE(),GETDATE(),302.85,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10052712'),GETDATE(),GETDATE(),633.43,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10053581'),GETDATE(),GETDATE(),281.77,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10053794'),GETDATE(),GETDATE(),268.46,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10054855'),GETDATE(),GETDATE(),1803.28,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10056262'),GETDATE(),GETDATE(),789.74,'Charge Off Amount')
INSERT INTO Transactions (account_code,transaction_date,capture_date,amount,description) VALUES ((SELECT TOP(1) code FROM Accounts WHERE account_number = '10057269'),GETDATE(),GETDATE(),359.6,'Charge Off Amount')
GO

--ALTER TABLE [dbo].[Accounts]
--ADD StatusCode INT NULL
--GO
--ALTER TABLE [dbo].[Accounts]
--ADD CONSTRAINT FK_Account_Status FOREIGN KEY (StatusCode) REFERENCES [Status](Code);
--GO

IF NOT EXISTS (SELECT 1 FROM [dbo].[Status] WHERE [Name] = 'Open')
BEGIN
    INSERT INTO [dbo].[Status] ([Name])
    VALUES ('Open');
END;
GO

IF NOT EXISTS (SELECT 1 FROM [dbo].[Status] WHERE [Name] = 'Closed')
BEGIN
    INSERT INTO [dbo].[Status] ([Name])
    VALUES ('Closed');
END;
GO




GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
